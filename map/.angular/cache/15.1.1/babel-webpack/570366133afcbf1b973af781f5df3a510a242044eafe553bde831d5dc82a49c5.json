{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"D:/Projects/nginx-auth-demo/map/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nfunction fetchImage(_x, _x2, _x3, _x4) {\n  return _fetchImage.apply(this, arguments);\n}\nfunction _fetchImage() {\n  _fetchImage = _asyncToGenerator(function* (url, callback, headers, abort) {\n    let _headers = {};\n    if (headers) {\n      headers.forEach(h => {\n        _headers[h.header] = h.value;\n      });\n    }\n    const controller = new AbortController();\n    const signal = controller.signal;\n    if (abort) {\n      abort.subscribe(() => {\n        controller.abort();\n      });\n    }\n    const f = yield fetch(url, {\n      method: \"GET\",\n      headers: _headers,\n      mode: \"cors\",\n      signal: signal\n    });\n    const blob = yield f.blob();\n    callback(blob);\n  });\n  return _fetchImage.apply(this, arguments);\n}\nL.TileLayer.WMSHeader = L.TileLayer.WMS.extend({\n  initialize: function (url, options, headers, abort, results) {\n    L.TileLayer.WMS.prototype.initialize.call(this, url, options);\n    this.headers = headers;\n    this.abort = abort;\n    this.results = results;\n  },\n  createTile(coords, done) {\n    const url = this.getTileUrl(coords);\n    const img = document.createElement(\"img\");\n    img.setAttribute(\"role\", \"presentation\");\n    self = this;\n    fetchImage(url, resp => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        img.src = reader.result;\n        if (self.results) {\n          self.results.next(reader.result);\n        }\n        ;\n      };\n      reader.readAsDataURL(resp);\n      done(null, img);\n    }, this.headers, this.abort);\n    return img;\n  }\n});\nL.TileLayer.wmsHeader = function (url, options, headers, abort, results) {\n  return new L.TileLayer.WMSHeader(url, options, headers, abort, results);\n};","map":{"version":3,"names":["fetchImage","url","callback","headers","abort","_headers","forEach","h","header","value","controller","AbortController","signal","subscribe","f","fetch","method","mode","blob","L","TileLayer","WMSHeader","WMS","extend","initialize","options","results","prototype","call","createTile","coords","done","getTileUrl","img","document","createElement","setAttribute","self","resp","reader","FileReader","onload","src","result","next","readAsDataURL","wmsHeader"],"sources":["D:/Projects/nginx-auth-demo/map/node_modules/leaflet-wms-header/index.js"],"sourcesContent":["'use strict';\n\nasync function fetchImage(url, callback, headers, abort) {\n  let _headers = {};\n  if (headers) {\n    headers.forEach(h => {\n      _headers[h.header] = h.value;\n    });\n  }\n  const controller = new AbortController();\n  const signal = controller.signal;\n  if (abort) {\n    abort.subscribe(() => {\n      controller.abort();\n    });\n  }\n  const f = await fetch(url, {\n    method: \"GET\",\n    headers: _headers,\n    mode: \"cors\",\n    signal: signal\n  });\n  const blob = await f.blob();\n  callback(blob);\n}\n\nL.TileLayer.WMSHeader = L.TileLayer.WMS.extend({\n  initialize: function (url, options, headers, abort, results) {\n    L.TileLayer.WMS.prototype.initialize.call(this, url, options);\n    this.headers = headers;\n    this.abort = abort;\n    this.results = results;\n  },\n  createTile(coords, done) {\n    const url = this.getTileUrl(coords);\n    const img = document.createElement(\"img\");\n    img.setAttribute(\"role\", \"presentation\");\n\n    self = this;\n\n    fetchImage(\n      url,\n      resp => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          img.src = reader.result;\n          if (self.results) {\n            self.results.next(reader.result);\n          };\n        };\n        reader.readAsDataURL(resp);\n        done(null, img);\n      },\n      this.headers,\n      this.abort\n    );\n    return img;\n  }\n});\n\nL.TileLayer.wmsHeader = function (url, options, headers, abort, results) {\n  return new L.TileLayer.WMSHeader(url, options, headers, abort, results);\n};\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA,SAEEA,UAAU;EAAA;AAAA;AAAA;EAAA,gCAAzB,WAA0BC,GAAG,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAE;IACvD,IAAIC,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAIF,OAAO,EAAE;MACXA,OAAO,CAACG,OAAO,CAACC,CAAC,IAAI;QACnBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAAC,GAAGD,CAAC,CAACE,KAAK;MAC9B,CAAC,CAAC;IACJ;IACA,MAAMC,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxC,MAAMC,MAAM,GAAGF,UAAU,CAACE,MAAM;IAChC,IAAIR,KAAK,EAAE;MACTA,KAAK,CAACS,SAAS,CAAC,MAAM;QACpBH,UAAU,CAACN,KAAK,EAAE;MACpB,CAAC,CAAC;IACJ;IACA,MAAMU,CAAC,SAASC,KAAK,CAACd,GAAG,EAAE;MACzBe,MAAM,EAAE,KAAK;MACbb,OAAO,EAAEE,QAAQ;MACjBY,IAAI,EAAE,MAAM;MACZL,MAAM,EAAEA;IACV,CAAC,CAAC;IACF,MAAMM,IAAI,SAASJ,CAAC,CAACI,IAAI,EAAE;IAC3BhB,QAAQ,CAACgB,IAAI,CAAC;EAChB,CAAC;EAAA;AAAA;AAEDC,CAAC,CAACC,SAAS,CAACC,SAAS,GAAGF,CAAC,CAACC,SAAS,CAACE,GAAG,CAACC,MAAM,CAAC;EAC7CC,UAAU,EAAE,UAAUvB,GAAG,EAAEwB,OAAO,EAAEtB,OAAO,EAAEC,KAAK,EAAEsB,OAAO,EAAE;IAC3DP,CAAC,CAACC,SAAS,CAACE,GAAG,CAACK,SAAS,CAACH,UAAU,CAACI,IAAI,CAAC,IAAI,EAAE3B,GAAG,EAAEwB,OAAO,CAAC;IAC7D,IAAI,CAACtB,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACsB,OAAO,GAAGA,OAAO;EACxB,CAAC;EACDG,UAAU,CAACC,MAAM,EAAEC,IAAI,EAAE;IACvB,MAAM9B,GAAG,GAAG,IAAI,CAAC+B,UAAU,CAACF,MAAM,CAAC;IACnC,MAAMG,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACzCF,GAAG,CAACG,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC;IAExCC,IAAI,GAAG,IAAI;IAEXrC,UAAU,CACRC,GAAG,EACHqC,IAAI,IAAI;MACN,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;QACpBR,GAAG,CAACS,GAAG,GAAGH,MAAM,CAACI,MAAM;QACvB,IAAIN,IAAI,CAACX,OAAO,EAAE;UAChBW,IAAI,CAACX,OAAO,CAACkB,IAAI,CAACL,MAAM,CAACI,MAAM,CAAC;QAClC;QAAC;MACH,CAAC;MACDJ,MAAM,CAACM,aAAa,CAACP,IAAI,CAAC;MAC1BP,IAAI,CAAC,IAAI,EAAEE,GAAG,CAAC;IACjB,CAAC,EACD,IAAI,CAAC9B,OAAO,EACZ,IAAI,CAACC,KAAK,CACX;IACD,OAAO6B,GAAG;EACZ;AACF,CAAC,CAAC;AAEFd,CAAC,CAACC,SAAS,CAAC0B,SAAS,GAAG,UAAU7C,GAAG,EAAEwB,OAAO,EAAEtB,OAAO,EAAEC,KAAK,EAAEsB,OAAO,EAAE;EACvE,OAAO,IAAIP,CAAC,CAACC,SAAS,CAACC,SAAS,CAACpB,GAAG,EAAEwB,OAAO,EAAEtB,OAAO,EAAEC,KAAK,EAAEsB,OAAO,CAAC;AACzE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}